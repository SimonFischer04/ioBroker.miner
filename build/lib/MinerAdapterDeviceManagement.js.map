{
  "version": 3,
  "sources": ["../../src/lib/MinerAdapterDeviceManagement.ts"],
  "sourcesContent": ["import {ActionContext, DeviceInfo, DeviceManagement, JsonFormData} from '@iobroker/dm-utils';\nimport {MinerAdapter} from '../main';\nimport {categoryKeys} from '../miner/model/Category';\nimport {minerTypeKeys} from '../miner/model/MinerSettings';\n\nclass MinerAdapterDeviceManagement extends DeviceManagement<MinerAdapter> {\n    async getInstanceInfo() {\n        const data = {\n            ...super.getInstanceInfo(),\n            actions: [\n                {\n                    id: 'newDevice',\n                    icon: 'fas fa-plus',\n                    title: '',\n                    description: {\n                        en: 'Add new device to Miner',\n                        de: 'Neues Ger\u00E4t zu Miner hinzuf\u00FCgen',\n                        ru: '\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043D\u043E\u0432\u043E\u0435 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u043E \u0432 Miner',\n                        pt: 'Adicionar novo dispositivo ao Miner',\n                        nl: 'Voeg nieuw apparaat toe aan Miner',\n                        fr: 'Ajouter un nouvel appareil \u00E0 Miner',\n                        it: 'Aggiungi nuovo dispositivo a Miner',\n                        es: 'Agregar nuevo dispositivo a Miner',\n                        pl: 'Dodaj nowe urz\u0105dzenie do Miner',\n                        'zh-cn': '\u5C06\u65B0\u8BBE\u5907\u6DFB\u52A0\u5230Miner',\n                        uk: '\u0414\u043E\u0434\u0430\u0442\u0438 \u043D\u043E\u0432\u0438\u0439 \u043F\u0440\u0438\u0441\u0442\u0440\u0456\u0439 \u0434\u043E Miner'\n                    },\n                    handler: this.handleNewDevice.bind(this)\n                },\n                // TODO\n                /*{\n                    id: 'discover',\n                    icon: 'fas fa-search',\n                    title: '',\n                    description: {\n                        en: 'Discover new devices',\n                        de: 'Neue Ger\u00E4te suchen',\n                        ru: '\u041E\u0431\u043D\u0430\u0440\u0443\u0436\u0438\u0442\u044C \u043D\u043E\u0432\u044B\u0435 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430',\n                        pt: 'Descubra novos dispositivos',\n                        nl: 'Ontdek nieuwe apparaten',\n                        fr: 'D\u00E9couvrir de nouveaux appareils',\n                        it: 'Scopri nuovi dispositivi',\n                        es: 'Descubrir nuevos dispositivos',\n                        pl: 'Odkryj nowe urz\u0105dzenia',\n                        'zh-cn': '\u53D1\u73B0\u65B0\u8BBE\u5907',\n                        uk: '\u0412\u0438\u044F\u0432\u0438\u0442\u0438 \u043D\u043E\u0432\u0456 \u043F\u0440\u0438\u0441\u0442\u0440\u043E\u0457'\n                    },\n                    handler: this.handleDiscover.bind(this)\n                }*/\n            ],\n        };\n        return data;\n    }\n\n    async handleNewDevice(context: ActionContext) {\n        this.adapter.log.info('handleNewDevice');\n\n        const result: JsonFormData | undefined = await context.showForm({\n            type: 'panel',\n            items: {\n                category: {\n                    type: 'select',\n                    newLine: true,\n                    label: 'category', // TODO: translate\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    options: categoryKeys.map(key => {\n                        return {\n                            value: key,\n                            // TODO: translate(key)\n                            label: key\n                        }\n                    })\n                },\n                minerType: {\n                    type: 'select',\n                    newLine: true,\n                    label: 'minerType', // TODO: translate\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    options: minerTypeKeys.map(key => {\n                        return {\n                            value: key,\n                            // TODO: translate(key)\n                            label: key\n                        }\n                    })\n                },\n                name: {\n                    type: 'text',\n                    newLine: true,\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    // trim: false,\n                    label: {\n                        en: 'Name',\n                        de: 'Name',\n                        ru: '\u0418\u043C\u044F',\n                        pt: 'Nome',\n                        nl: 'Naam',\n                        fr: 'Nom',\n                        it: 'Nome',\n                        es: 'Nombre',\n                        pl: 'Nazwa',\n                        'zh-cn': '\u540D\u79F0',\n                        uk: '\u0406\u043C\\'\u044F'\n                    }\n                },\n                host: {\n                    type: 'text',\n                    newLine: true,\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    trim: true,\n                    placeholder: 'fe80::42',\n                    label: {\n                        en: 'IP address',\n                        de: 'IP-Adresse',\n                        ru: 'IP \u0430\u0434\u0440\u0435\u0441',\n                        pt: 'Endere\u00E7o de IP',\n                        nl: 'IP adres',\n                        fr: 'Adresse IP',\n                        it: 'Indirizzo IP',\n                        es: 'Direcci\u00F3n IP',\n                        pl: 'Adres IP',\n                        'zh-cn': 'IP\u5730\u5740',\n                        uk: 'IP \u0430\u0434\u0440\u0435\u0441\u0430'\n                    }\n                },\n                // TODO: get by request\n                mac: {\n                    type: 'text',\n                    newLine: true,\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    trim: true,\n                    placeholder: '00:00:00:00:00:00',\n                    label: {\n                        en: 'MAC address',\n                        de: 'MAC-Adresse',\n                        ru: 'MAC \u0430\u0434\u0440\u0435\u0441',\n                        pt: 'Endere\u00E7o MAC',\n                        nl: 'MAC adres',\n                        fr: 'Adresse MAC',\n                        it: 'Indirizzo MAC',\n                        es: 'Direcci\u00F3n MAC',\n                        pl: 'Adres MAC',\n                        'zh-cn': 'MAC\u5730\u5740',\n                        uk: 'MAC \u0430\u0434\u0440\u0435\u0441\u0430'\n                    },\n                },\n                // TODO: show only if miner requires polling? possible to dynamically add fields to form?\n                pollInterval: {\n                    type: 'number',\n                    newLine: true,\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    min: 5,\n                    unit: 's',\n                    label: {\n                        'en': 'poll interval', // TODO: also fix translate in jsonConfig.json\n                        'de': 'Abrufintervall',\n                        'ru': '\u0438\u043D\u0442\u0435\u0440\u0432\u0430\u043B',\n                        'pt': 'intervalo de polui\u00E7\u00E3o',\n                        'nl': 'poll-interval',\n                        'fr': 'intervalle de sondage',\n                        'it': 'intervallo di sondaggio',\n                        'es': 'intervalo de encuesta',\n                        'pl': 'przedzia\u0142 ankietowy',\n                        'uk': '\u0456\u043D\u0442\u0435\u0440\u0432\u0430\u043B \u043E\u043F\u0438\u0442\u0443\u0432\u0430\u043D\u043D\u044F',\n                        'zh-cn': '\u6C11\u610F\u8C03\u67E5\u95F4\u9694'\n                    }\n                },\n                enabled: {\n                    type: 'checkbox',\n                    newLine: true,\n                    label: {\n                        'en': 'enabled',\n                        'de': 'aktiviert',\n                        'ru': '\u0432\u043A\u043B\u044E\u0447\u0435\u043D',\n                        'pt': 'habilitado',\n                        'nl': 'ingeschakeld',\n                        'fr': 'activ\u00E9',\n                        'it': 'abilitata',\n                        'es': 'habilitado',\n                        'pl': 'w\u0142\u0105czone',\n                        'uk': '\u0443\u0432\u0456\u043C\u043A\u043D\u0443\u0442\u0438',\n                        'zh-cn': '\u542F\u7528'\n                    }\n                }\n            }\n        },\n        {\n            data: {\n                category: 'miner',\n                minerType: undefined,\n                name: '',\n                host: '',\n                mac: '',\n                pollInterval: this.adapter.config.pollInterval,\n                enabled: true\n            },\n            title: {\n                en: 'Add new device',\n                de: 'Neues Ger\u00E4t hinzuf\u00FCgen',\n                ru: '\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043D\u043E\u0432\u043E\u0435 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u043E',\n                pt: 'Adicionar novo dispositivo',\n                nl: 'Voeg nieuw apparaat toe',\n                fr: 'Ajouter un nouvel appareil',\n                it: 'Aggiungi nuovo dispositivo',\n                es: 'Agregar nuevo dispositivo',\n                pl: 'Dodaj nowe urz\u0105dzenie',\n                'zh-cn': '\u6DFB\u52A0\u65B0\u8BBE\u5907',\n                uk: '\u0414\u043E\u0434\u0430\u0442\u0438 \u043D\u043E\u0432\u0438\u0439 \u043F\u0440\u0438\u0441\u0442\u0440\u0456\u0439'\n            }\n        }\n        );\n\n        console.log('add device result: ', result);\n\n        if (result === null || result === undefined) {\n            return {refresh: false};\n        }\n\n        // TODO: check category && minerType\n\n        // Check if mac was entered\n        // TODO: get from device\n        if (result.mac === '') {\n            await context.showMessage(`MAC address required`);\n        }\n\n        // Check if mac is valid\n        if (result.mac !== '') {\n            // Check mac has the right format\n            if (!result.mac.match(/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/)) {\n                await context.showMessage(`MAC address ${result.mac} is not valid`);\n                // TODO: Objects are not valid as a React child (found: object with keys {en, de, ru, pt, nl, fr, it, es, pl, zh-cn, uk}). If you meant to render a collection of children, use an array instead.\n                // await context.showMessage({\n                //     en: `MAC address ${result.mac} is not valid`,\n                //     de: `MAC-Adresse ${result.mac} ist ung\u00FCltig`,\n                //     ru: `MAC \u0430\u0434\u0440\u0435\u0441 ${result.mac} \u043D\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u0435\u043D`,\n                //     pt: `Endere\u00E7o MAC ${result.mac} n\u00E3o \u00E9 v\u00E1lido`,\n                //     nl: `MAC-adres ${result.mac} is ongeldig`,\n                //     fr: `L'adresse MAC ${result.mac} n'est pas valide`,\n                //     it: `L'indirizzo MAC ${result.mac} non \u00E8 valido`,\n                //     es: `La direcci\u00F3n MAC ${result.mac} no es v\u00E1lida`,\n                //     pl: `Adres MAC ${result.mac} jest nieprawid\u0142owy`,\n                //     'zh-cn': `MAC\u5730\u5740 ${result.mac} \u65E0\u6548`,\n                //     uk: `MAC \u0430\u0434\u0440\u0435\u0441\u0430 ${result.mac} \u043D\u0435\u0434\u0456\u0439\u0441\u043D\u0430`\n                // });\n                return {refresh: false};\n            }\n        }\n        // Check if ip was entered\n        if (result.ip === '') {\n            // TODO: Objects are not valid as a React child (found: object with keys {en, de, ru, pt, nl, fr, it, es, pl, zh-cn, uk}). If you meant to render a collection of children, use an array instead.\n            await context.showMessage(`Please enter an IP address`);\n            // await context.showMessage({\n            //     en: `Please enter an IP address`,\n            //     de: `Bitte geben Sie eine IP-Adresse ein`,\n            //     ru: `\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 IP \u0430\u0434\u0440\u0435\u0441`,\n            //     pt: `Por favor, digite um endere\u00E7o de IP`,\n            //     nl: `Voer een IP-adres in`,\n            //     fr: `Veuillez saisir une adresse IP`,\n            //     it: `Inserisci un indirizzo IP`,\n            //     es: `Por favor ingrese una direcci\u00F3n IP`,\n            //     pl: `Prosz\u0119 wprowadzi\u0107 adres IP`,\n            //     'zh-cn': `\u8BF7\u8F93\u5165IP\u5730\u5740`,\n            //     uk: `\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C IP \u0430\u0434\u0440\u0435\u0441\u0443`\n            // });\n            return {refresh: false};\n        }\n        // Check if ip is valid\n        if (result.ip !== '') {\n            // Check ip has the right format\n            // TODO: fix this check\n            if (!result.ip.match(/^(\\d{1,3}\\.){3}\\d{1,3}$/) && false) {\n                // TODO: Objects are not valid as a React child (found: object with keys {en, de, ru, pt, nl, fr, it, es, pl, zh-cn, uk}). If you meant to render a collection of children, use an array instead.\n                await context.showMessage(`IP address ${result?.ip} is not valid`);\n                // await context.showMessage({\n                //     en: `IP address ${result.ip} is not valid`,\n                //     de: `IP-Adresse ${result.ip} ist ung\u00FCltig`,\n                //     ru: `IP \u0430\u0434\u0440\u0435\u0441 ${result.ip} \u043D\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u0435\u043D`,\n                //     pt: `Endere\u00E7o de IP ${result.ip} n\u00E3o \u00E9 v\u00E1lido`,\n                //     nl: `IP-adres ${result.ip} is ongeldig`,\n                //     fr: `L'adresse IP ${result.ip} n'est pas valide`,\n                //     it: `L'indirizzo IP ${result.ip} non \u00E8 valido`,\n                //     es: `La direcci\u00F3n IP ${result.ip} no es v\u00E1lida`,\n                //     pl: `Adres IP ${result.ip} jest nieprawid\u0142owy`,\n                //     'zh-cn': `IP\u5730\u5740 ${result.ip} \u65E0\u6548`,\n                //     uk: `IP \u0430\u0434\u0440\u0435\u0441\u0430 ${result.ip} \u043D\u0435\u0434\u0456\u0439\u0441\u043D\u0430`\n                // });\n                return {refresh: false};\n            }\n        }\n\n        await this.adapter.addDevice(result.category, result.name, result.ip, result.mac, result.pollInterval, result.enabled);\n        return {refresh: true};\n    }\n\n    protected async listDevices(): Promise<DeviceInfo[]> {\n        const devices = await this.adapter.getDevicesAsync();\n        const arrDevices: DeviceInfo[] = [];\n        console.error('alistDevices')\n\n        debugger\n\n        for (const device of devices) {\n            // TODO: add more info\n\n            arrDevices.push({\n                id: device._id,\n                name: device.common.name\n            })\n        }\n\n        return arrDevices;\n    }\n\n    async debugging(): Promise<void> {\n        const devices = await this.adapter.getDevicesAsync();\n        const arrDevices: DeviceInfo[] = [];\n        console.error('listDevices')\n\n        debugger\n\n        // for (const i in devices) {\n        for (const i of devices) {\n            console.error('bTF2', i);\n        }\n    }\n\n    async close(): Promise<void> {\n        // do nothing\n    }\n}\n\nexport default MinerAdapterDeviceManagement;"],
  "mappings": "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",
  "names": []
}
