{
  "version": 3,
  "sources": ["../../src/lib/MinerAdapterDeviceManagement.ts"],
  "sourcesContent": ["import {\n    ActionContext, DeviceDetails,\n    DeviceInfo,\n    DeviceManagement,\n    DeviceRefresh,\n    InstanceDetails,\n    JsonFormData\n} from '@iobroker/dm-utils';\nimport {MinerAdapter} from '../main';\nimport {categoryKeys} from './miner/model/Category';\nimport {MinerSettings, minerTypeKeys, PollingMinerSettings, TeamRedMinerSettings} from './miner/model/MinerSettings';\nimport {\n    decryptDeviceSettings,\n    IOBrokerDeviceSettings,\n    IOBrokerMinerSettings,\n    isMiner\n} from '../miner/model/IOBrokerMinerSettings';\nimport {PartialDeep} from 'type-fest';\nimport {createMiner} from './miner/miner/MinerFactory';\n\nclass MinerAdapterDeviceManagement extends DeviceManagement<MinerAdapter> {\n    async getInstanceInfo(): Promise<InstanceDetails> {\n        const data = {\n            ...super.getInstanceInfo(),\n            actions: [\n                {\n                    id: 'refresh',\n                    icon: 'fas fa-redo-alt',\n                    title: '',\n                    description: {\n                        en: 'Refresh device list',\n                        de: 'Ger\u00E4teliste aktualisieren',\n                        ru: '\u041E\u0431\u043D\u043E\u0432\u0438\u0442\u044C \u0441\u043F\u0438\u0441\u043E\u043A \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432',\n                        pt: 'Atualizar lista de dispositivos',\n                        nl: 'Vernieuw apparaatlijst',\n                        fr: 'Actualiser la liste des appareils',\n                        it: 'Aggiorna elenco dispositivi',\n                        es: 'Actualizar lista de dispositivos',\n                        pl: 'Od\u015Bwie\u017C list\u0119 urz\u0105dze\u0144',\n                        'zh-cn': '\u5237\u65B0\u8BBE\u5907\u5217\u8868',\n                        uk: '\u041E\u043D\u043E\u0432\u0438\u0442\u0438 \u0441\u043F\u0438\u0441\u043E\u043A \u043F\u0440\u0438\u0441\u0442\u0440\u043E\u0457\u0432'\n                    },\n                    handler: this.handleRefresh.bind(this)\n                },\n                {\n                    id: 'newDevice',\n                    icon: 'fas fa-plus',\n                    title: '',\n                    description: {\n                        en: 'Add new device to Miner',\n                        de: 'Neues Ger\u00E4t zu Miner hinzuf\u00FCgen',\n                        ru: '\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043D\u043E\u0432\u043E\u0435 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u043E \u0432 Miner',\n                        pt: 'Adicionar novo dispositivo ao Miner',\n                        nl: 'Voeg nieuw apparaat toe aan Miner',\n                        fr: 'Ajouter un nouvel appareil \u00E0 Miner',\n                        it: 'Aggiungi nuovo dispositivo a Miner',\n                        es: 'Agregar nuevo dispositivo a Miner',\n                        pl: 'Dodaj nowe urz\u0105dzenie do Miner',\n                        'zh-cn': '\u5C06\u65B0\u8BBE\u5907\u6DFB\u52A0\u5230Miner',\n                        uk: '\u0414\u043E\u0434\u0430\u0442\u0438 \u043D\u043E\u0432\u0438\u0439 \u043F\u0440\u0438\u0441\u0442\u0440\u0456\u0439 \u0434\u043E Miner'\n                    },\n                    handler: this.handleNewDevice.bind(this)\n                },\n                // TODO\n                /*{\n                    id: 'discover',\n                    icon: 'fas fa-search',\n                    title: '',\n                    description: {\n                        en: 'Discover new devices',\n                        de: 'Neue Ger\u00E4te suchen',\n                        ru: '\u041E\u0431\u043D\u0430\u0440\u0443\u0436\u0438\u0442\u044C \u043D\u043E\u0432\u044B\u0435 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430',\n                        pt: 'Descubra novos dispositivos',\n                        nl: 'Ontdek nieuwe apparaten',\n                        fr: 'D\u00E9couvrir de nouveaux appareils',\n                        it: 'Scopri nuovi dispositivi',\n                        es: 'Descubrir nuevos dispositivos',\n                        pl: 'Odkryj nowe urz\u0105dzenia',\n                        'zh-cn': '\u53D1\u73B0\u65B0\u8BBE\u5907',\n                        uk: '\u0412\u0438\u044F\u0432\u0438\u0442\u0438 \u043D\u043E\u0432\u0456 \u043F\u0440\u0438\u0441\u0442\u0440\u043E\u0457'\n                    },\n                    handler: this.handleDiscover.bind(this)\n                }*/\n            ],\n        };\n        return data;\n    }\n\n    async handleRefresh(_context: ActionContext): Promise<{ refresh: boolean }> {\n        this.adapter.log.info('handleRefresh');\n        return {refresh: true};\n    }\n\n    async handleNewDevice(context: ActionContext): Promise<{ refresh: boolean }> {\n        this.adapter.log.info('handleNewDevice');\n\n        const settings = await this.showDeviceConfigurationForm(context, {\n            category: 'miner',\n            settings: {\n                minerType: undefined,\n                id: crypto.randomUUID(),\n                host: '',\n                pollInterval: this.adapter.config.pollInterval,\n                claymore: {\n                    minerType: 'claymoreMiner',\n                    host: '',\n                    password: crypto.randomUUID(),\n                    port: 3333\n                },\n                sg: {\n                    minerType: 'sgMiner',\n                    host: '',\n                    port: 4028\n                }\n            },\n            name: '',\n            mac: '',\n            enabled: true\n        } as PartialDeep<IOBrokerMinerSettings>, { // TODO: improve this (by making IOBrokerMinerSettings generic?, ...)\n            en: 'Add new device',\n            de: 'Neues Ger\u00E4t hinzuf\u00FCgen',\n            ru: '\u0414\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043D\u043E\u0432\u043E\u0435 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u043E',\n            pt: 'Adicionar novo dispositivo',\n            nl: 'Voeg nieuw apparaat toe',\n            fr: 'Ajouter un nouvel appareil',\n            it: 'Aggiungi nuovo dispositivo',\n            es: 'Agregar nuevo dispositivo',\n            pl: 'Dodaj nowe urz\u0105dzenie',\n            'zh-cn': '\u6DFB\u52A0\u65B0\u8BBE\u5907',\n            uk: '\u0414\u043E\u0434\u0430\u0442\u0438 \u043D\u043E\u0432\u0438\u0439 \u043F\u0440\u0438\u0441\u0442\u0440\u0456\u0439'\n        });\n\n        this.adapter.log.debug(`handleNewDevice settings: ${JSON.stringify(settings)}`);\n\n        if (settings === undefined) {\n            return {refresh: false};\n        }\n\n        await this.adapter.addDevice(settings);\n\n        return {refresh: true};\n    }\n\n    private async showDeviceConfigurationForm(context: ActionContext, existingSettings: PartialDeep<IOBrokerDeviceSettings>, title: ioBroker.StringOrTranslated): Promise<IOBrokerMinerSettings | undefined> {\n        // TODO: re-open form with filled in values if something is missing after showing validation result\n        // basically recursive call with existingSettings = return value of this function\n\n        this.adapter.log.debug(`showDeviceConfigurationForm existingSettings: ${JSON.stringify(existingSettings)}`);\n\n        // TODO: implement pool support\n        if (!isMiner(existingSettings)) {\n            this.adapter.log.error(`MinerAdapterDeviceManagement/showDeviceConfigurationForm existingSettings ${existingSettings} is not a miner.`);\n            return undefined;\n        }\n\n        const result: JsonFormData | undefined = await context.showForm({\n            type: 'panel',\n            items: {\n                category: {\n                    type: 'select',\n                    newLine: true,\n                    label: 'category', // TODO: translate\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    options: categoryKeys.map(key => {\n                        return {\n                            value: key,\n                            // TODO: translate(key)\n                            label: key\n                        }\n                    })\n                },\n                minerType: {\n                    type: 'select',\n                    newLine: true,\n                    label: 'minerType', // TODO: translate\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    options: minerTypeKeys.map(key => {\n                        return {\n                            value: key,\n                            // TODO: translate(key)\n                            label: key\n                        }\n                    })\n                },\n                id: {\n                    type: 'text',\n                    newLine: true,\n                    label: 'id', // TODO: translate\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    readOnly: true,\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    noClearButton: true,\n                    disabled: true\n                },\n                name: {\n                    type: 'text',\n                    newLine: true,\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    // trim: false,\n                    label: {\n                        en: 'Name',\n                        de: 'Name',\n                        ru: '\u0418\u043C\u044F',\n                        pt: 'Nome',\n                        nl: 'Naam',\n                        fr: 'Nom',\n                        it: 'Nome',\n                        es: 'Nombre',\n                        pl: 'Nazwa',\n                        'zh-cn': '\u540D\u79F0',\n                        uk: '\u0406\u043C\\'\u044F'\n                    }\n                },\n                host: {\n                    type: 'text',\n                    newLine: true,\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    trim: true,\n                    placeholder: 'fe80::42',\n                    label: {\n                        en: 'IP address',\n                        de: 'IP-Adresse',\n                        ru: 'IP \u0430\u0434\u0440\u0435\u0441',\n                        pt: 'Endere\u00E7o de IP',\n                        nl: 'IP adres',\n                        fr: 'Adresse IP',\n                        it: 'Indirizzo IP',\n                        es: 'Direcci\u00F3n IP',\n                        pl: 'Adres IP',\n                        'zh-cn': 'IP\u5730\u5740',\n                        uk: 'IP \u0430\u0434\u0440\u0435\u0441\u0430'\n                    }\n                },\n                // TODO: get by request\n                mac: {\n                    type: 'text',\n                    newLine: true,\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    trim: true,\n                    placeholder: '00:00:00:00:00:00',\n                    label: {\n                        en: 'MAC address',\n                        de: 'MAC-Adresse',\n                        ru: 'MAC \u0430\u0434\u0440\u0435\u0441',\n                        pt: 'Endere\u00E7o MAC',\n                        nl: 'MAC adres',\n                        fr: 'Adresse MAC',\n                        it: 'Indirizzo MAC',\n                        es: 'Direcci\u00F3n MAC',\n                        pl: 'Adres MAC',\n                        'zh-cn': 'MAC\u5730\u5740',\n                        uk: 'MAC \u0430\u0434\u0440\u0435\u0441\u0430'\n                    },\n                },\n                // TODO: show only if miner requires polling? possible to dynamically add fields to form?\n                pollInterval: {\n                    type: 'number',\n                    newLine: true,\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    min: 100,\n                    unit: 'ms',\n                    label: {\n                        'en': 'poll interval', // TODO: also fix translate in jsonConfig.json\n                        'de': 'Abrufintervall',\n                        'ru': '\u0438\u043D\u0442\u0435\u0440\u0432\u0430\u043B',\n                        'pt': 'intervalo de polui\u00E7\u00E3o',\n                        'nl': 'poll-interval',\n                        'fr': 'intervalle de sondage',\n                        'it': 'intervallo di sondaggio',\n                        'es': 'intervalo de encuesta',\n                        'pl': 'przedzia\u0142 ankietowy',\n                        'uk': '\u0456\u043D\u0442\u0435\u0440\u0432\u0430\u043B \u043E\u043F\u0438\u0442\u0443\u0432\u0430\u043D\u043D\u044F',\n                        'zh-cn': '\u6C11\u610F\u8C03\u67E5\u95F4\u9694'\n                    }\n                },\n                password: {\n                    type: 'text',\n                    // type password does not allow to show the password generated as default value\n                    // type: 'password',\n                    newLine: true,\n                    // TODO: FixMeLater\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    // visible: true,\n                    label: {\n                        'en': 'password',\n                        'de': 'passwort',\n                        'ru': '\u043F\u0430\u0440\u043E\u043B\u044C',\n                        'pt': 'senha',\n                        'nl': 'wachtwoord',\n                        'fr': 'mot de passe',\n                        'it': 'password',\n                        'es': 'contrase\u00F1a',\n                        'pl': 'has\u0142o',\n                        'uk': '\u0443\u0432\u0456\u0439\u0442\u0438',\n                        'zh-cn': '\u5BC6\u7801'\n                    }\n                },\n                enabled: {\n                    type: 'checkbox',\n                    newLine: true,\n                    label: {\n                        'en': 'enabled',\n                        'de': 'aktiviert',\n                        'ru': '\u0432\u043A\u043B\u044E\u0447\u0435\u043D',\n                        'pt': 'habilitado',\n                        'nl': 'ingeschakeld',\n                        'fr': 'activ\u00E9',\n                        'it': 'abilitata',\n                        'es': 'habilitado',\n                        'pl': 'w\u0142\u0105czone',\n                        'uk': '\u0443\u0432\u0456\u043C\u043A\u043D\u0443\u0442\u0438',\n                        'zh-cn': '\u542F\u7528'\n                    }\n                }\n            }\n        },\n        {\n            data: {\n                category: existingSettings.category,\n                id: existingSettings.settings.id,\n                minerType: existingSettings.settings.minerType,\n                name: existingSettings.name,\n                host: existingSettings.settings.host,\n                mac: existingSettings.mac,\n                pollInterval: (existingSettings.settings as PollingMinerSettings).pollInterval, // TODO: implement this properly\n                password: (existingSettings.settings as TeamRedMinerSettings).claymore?.password ?? '', // TODO: implement this properly\n                enabled: existingSettings.enabled\n            },\n            title\n        }\n        );\n\n        console.log('add device result: ', result);\n\n        if (result === null || result === undefined) {\n            return undefined;\n        }\n\n        // TODO: check category && minerType\n\n        // Check if mac was entered\n        // TODO: get from device\n        if (result.mac === '') {\n            await context.showMessage(`MAC address required`);\n        }\n\n        // Check if mac is valid\n        if (result.mac !== '') {\n            // Check mac has the right format\n            /*if (!result.mac.match(/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/)) {\n                await context.showMessage(`MAC address ${result.mac} is not valid`);\n                // TODO: Objects are not valid as a React child (found: object with keys {en, de, ru, pt, nl, fr, it, es, pl, zh-cn, uk}). If you meant to render a collection of children, use an array instead.\n                // await context.showMessage({\n                //     en: `MAC address ${result.mac} is not valid`,\n                //     de: `MAC-Adresse ${result.mac} ist ung\u00FCltig`,\n                //     ru: `MAC \u0430\u0434\u0440\u0435\u0441 ${result.mac} \u043D\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u0435\u043D`,\n                //     pt: `Endere\u00E7o MAC ${result.mac} n\u00E3o \u00E9 v\u00E1lido`,\n                //     nl: `MAC-adres ${result.mac} is ongeldig`,\n                //     fr: `L'adresse MAC ${result.mac} n'est pas valide`,\n                //     it: `L'indirizzo MAC ${result.mac} non \u00E8 valido`,\n                //     es: `La direcci\u00F3n MAC ${result.mac} no es v\u00E1lida`,\n                //     pl: `Adres MAC ${result.mac} jest nieprawid\u0142owy`,\n                //     'zh-cn': `MAC\u5730\u5740 ${result.mac} \u65E0\u6548`,\n                //     uk: `MAC \u0430\u0434\u0440\u0435\u0441\u0430 ${result.mac} \u043D\u0435\u0434\u0456\u0439\u0441\u043D\u0430`\n                // });\n                return undefined;\n            }*/\n        }\n        // Check if host/ip was entered\n        if (result.host === '') {\n            // TODO: Objects are not valid as a React child (found: object with keys {en, de, ru, pt, nl, fr, it, es, pl, zh-cn, uk}). If you meant to render a collection of children, use an array instead.\n            await context.showMessage(`Please enter an IP address`);\n            // await context.showMessage({\n            //     en: `Please enter an IP address`,\n            //     de: `Bitte geben Sie eine IP-Adresse ein`,\n            //     ru: `\u041F\u043E\u0436\u0430\u043B\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 IP \u0430\u0434\u0440\u0435\u0441`,\n            //     pt: `Por favor, digite um endere\u00E7o de IP`,\n            //     nl: `Voer een IP-adres in`,\n            //     fr: `Veuillez saisir une adresse IP`,\n            //     it: `Inserisci un indirizzo IP`,\n            //     es: `Por favor ingrese una direcci\u00F3n IP`,\n            //     pl: `Prosz\u0119 wprowadzi\u0107 adres IP`,\n            //     'zh-cn': `\u8BF7\u8F93\u5165IP\u5730\u5740`,\n            //     uk: `\u0411\u0443\u0434\u044C \u043B\u0430\u0441\u043A\u0430, \u0432\u0432\u0435\u0434\u0456\u0442\u044C IP \u0430\u0434\u0440\u0435\u0441\u0443`\n            // });\n            return undefined;\n        }\n        // Check if ip is valid\n        if (result.host !== '') {\n            // Check ip has the right format\n            // TODO: fix this check\n            /*if (!result.host.match(/^(\\d{1,3}\\.){3}\\d{1,3}$/)) {\n                // TODO: Objects are not valid as a React child (found: object with keys {en, de, ru, pt, nl, fr, it, es, pl, zh-cn, uk}). If you meant to render a collection of children, use an array instead.\n                await context.showMessage(`IP address ${result?.ip} is not valid`);\n                // await context.showMessage({\n                //     en: `IP address ${result.ip} is not valid`,\n                //     de: `IP-Adresse ${result.ip} ist ung\u00FCltig`,\n                //     ru: `IP \u0430\u0434\u0440\u0435\u0441 ${result.ip} \u043D\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u0435\u043D`,\n                //     pt: `Endere\u00E7o de IP ${result.ip} n\u00E3o \u00E9 v\u00E1lido`,\n                //     nl: `IP-adres ${result.ip} is ongeldig`,\n                //     fr: `L'adresse IP ${result.ip} n'est pas valide`,\n                //     it: `L'indirizzo IP ${result.ip} non \u00E8 valido`,\n                //     es: `La direcci\u00F3n IP ${result.ip} no es v\u00E1lida`,\n                //     pl: `Adres IP ${result.ip} jest nieprawid\u0142owy`,\n                //     'zh-cn': `IP\u5730\u5740 ${result.ip} \u65E0\u6548`,\n                //     uk: `IP \u0430\u0434\u0440\u0435\u0441\u0430 ${result.ip} \u043D\u0435\u0434\u0456\u0439\u0441\u043D\u0430`\n                // });\n                return undefined;\n            }*/\n        }\n\n        if (!isMiner({category: result.category})) { // TODO: pool support\n            this.log.error(`MinerAdapterDeviceManagement/handleNewDevice category ${result.category} is not yet supported.`);\n            return undefined;\n        }\n\n        let minerSettings: MinerSettings = {\n            id: result.id,\n            minerType: result.minerType,\n            host: result.host\n        }\n\n        switch (minerSettings.minerType) {\n            case 'teamRedMiner': {\n                const pollInterval = result.pollInterval ?? this.adapter.config.pollInterval;\n\n                const trmSettings: Omit<TeamRedMinerSettings, keyof MinerSettings> = {\n                    pollInterval,\n                    claymore: {\n                        minerType: 'claymoreMiner',\n                        pollInterval,\n                        host: minerSettings.host,\n                        password: result.password,\n                        port: 3333 // TODO: make configurable\n                    },\n                    sg: {\n                        minerType: 'sgMiner',\n                        pollInterval,\n                        host: minerSettings.host,\n                        port: 4028 // TODO: make configurable\n                    }\n                }\n                minerSettings = {\n                    ...minerSettings,\n                    ...trmSettings\n                }\n                break;\n            }\n\n            default: {\n                // TODO: same for category dropdown\n                // TODO: hide in dropdown to not create confusion something like \"visibleMinerTypes\" filter array?\n                this.adapter.log.error(`MinerAdapterDeviceManagement/handleNewDevice minerType ${minerSettings.minerType} not yet supported`);\n                return undefined;\n            }\n        }\n\n        const settings: IOBrokerMinerSettings = {\n            category: result.category,\n            name: result.name,\n            mac: result.mac,\n            enabled: result.enabled,\n            settings: minerSettings\n        }\n\n        return settings;\n    }\n\n    protected async listDevices(): Promise<DeviceInfo[]> {\n        const devices = await this.adapter.getDevicesAsync();\n        const arrDevices: DeviceInfo[] = [];\n        console.error('alistDevices')\n\n        debugger\n\n        for (const device of devices) {\n            // TODO: add more info\n\n            arrDevices.push({\n                id: device._id,\n                name: device.common.name,\n                hasDetails: true,\n                actions: [\n                    {\n                        id: 'delete',\n                        icon: 'fa-solid fa-trash-can',\n                        description: {\n                            en: 'Delete this device',\n                            de: 'Ger\u00E4t l\u00F6schen',\n                            ru: '\u0423\u0434\u0430\u043B\u0438\u0442\u044C \u044D\u0442\u043E \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u043E',\n                            pt: 'Excluir este dispositivo',\n                            nl: 'Verwijder dit apparaat',\n                            fr: 'Supprimer cet appareil',\n                            it: 'Elimina questo dispositivo',\n                            es: 'Eliminar este dispositivo',\n                            pl: 'Usu\u0144 to urz\u0105dzenie',\n                            'zh-cn': '\u5220\u9664\u6B64\u8BBE\u5907',\n                            uk: '\u0412\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u0446\u0435\u0439 \u043F\u0440\u0438\u0441\u0442\u0440\u0456\u0439'\n                        },\n                        handler: this.handleDeleteDevice.bind(this)\n                    },\n                    {\n                        id: 'settings',\n                        icon: 'fa-solid fa-gear',\n                        description: {\n                            en: 'Settings',\n                            de: 'Einstellungen',\n                            ru: '\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438',\n                            pt: 'Configura\u00E7\u00F5es',\n                            nl: 'Instellingen',\n                            fr: 'Param\u00E8tres',\n                            it: 'Impostazioni',\n                            es: 'Configuraciones',\n                            pl: 'Ustawienia',\n                            'zh-cn': '\u8BBE\u5B9A\u503C',\n                            uk: '\u041D\u0430\u043B\u0430\u0448\u0442\u0443\u0432\u0430\u043D\u043D\u044F'\n                        },\n                        handler: this.handleSettingsDevice.bind(this)\n                    }\n                ]\n            })\n        }\n\n        return arrDevices;\n    }\n\n    protected async handleDeleteDevice(id: string, context: ActionContext): Promise<{ refresh: DeviceRefresh }> {\n        const response = await context.showConfirmation({\n            en: `Do you really want to delete the device ${id}?`,\n            de: `M\u00F6chten Sie das Ger\u00E4t ${id} wirklich l\u00F6schen?`,\n            ru: `\u0412\u044B \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u0445\u043E\u0442\u0438\u0442\u0435 \u0443\u0434\u0430\u043B\u0438\u0442\u044C \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u043E ${id}?`,\n            pt: `Voc\u00EA realmente deseja excluir o dispositivo ${id}?`,\n            nl: `Weet u zeker dat u het apparaat ${id} wilt verwijderen?`,\n            fr: `Voulez-vous vraiment supprimer l'appareil ${id} ?`,\n            it: `Vuoi davvero eliminare il dispositivo ${id}?`,\n            es: `\u00BFRealmente desea eliminar el dispositivo ${id}?`,\n            pl: `Czy na pewno chcesz usun\u0105\u0107 urz\u0105dzenie ${id}?`,\n            'zh-cn': `\u60A8\u771F\u7684\u8981\u5220\u9664\u8BBE\u5907 ${id} \u5417\uFF1F`,\n            uk: `\u0412\u0438 \u0434\u0456\u0439\u0441\u043D\u043E \u0431\u0430\u0436\u0430\u0454\u0442\u0435 \u0432\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u043F\u0440\u0438\u0441\u0442\u0440\u0456\u0439 ${id}?`\n        });\n\n        // delete device\n        if (!response) {\n            return {refresh: false};\n        }\n        const success = await this.adapter.delDevice(id);\n        if (!success) {\n            await context.showMessage({\n                en: `Can not delete device ${id}`,\n                de: `Ger\u00E4t ${id} kann nicht gel\u00F6scht werden`,\n                ru: `\u041D\u0435\u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E \u0443\u0434\u0430\u043B\u0438\u0442\u044C \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u043E ${id}`,\n                pt: `N\u00E3o \u00E9 poss\u00EDvel excluir o dispositivo ${id}`,\n                nl: `Kan apparaat ${id} niet verwijderen`,\n                fr: `Impossible de supprimer l'appareil ${id}`,\n                it: `Impossibile eliminare il dispositivo ${id}`,\n                es: `No se puede eliminar el dispositivo ${id}`,\n                pl: `Nie mo\u017Cna usun\u0105\u0107 urz\u0105dzenia ${id}`,\n                'zh-cn': `\u65E0\u6CD5\u5220\u9664\u8BBE\u5907 ${id}`,\n                uk: `\u041D\u0435 \u0432\u0434\u0430\u043B\u043E\u0441\u044F \u0432\u0438\u0434\u0430\u043B\u0438\u0442\u0438 \u043F\u0440\u0438\u0441\u0442\u0440\u0456\u0439 ${id}`\n            });\n            return {refresh: false};\n        } else {\n            return {refresh: true};\n        }\n    }\n\n    protected async handleSettingsDevice(id: string, context: ActionContext): Promise<{ refresh: DeviceRefresh }> {\n        const obj = await this.adapter.getObjectAsync(id);\n\n        if (obj == null) {\n            this.adapter.log.error(`MinerAdapterDeviceManagement/handleSettingsDevice object ${id} not found`);\n            return {refresh: false};\n        }\n\n        const currentSettings: IOBrokerDeviceSettings = decryptDeviceSettings(obj.native as IOBrokerDeviceSettings, (value) => this.adapter.decrypt(value));\n\n        const newSettings = await this.showDeviceConfigurationForm(context, currentSettings, {\n            en: 'Settings',\n            de: 'Einstellungen',\n            ru: '\u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0438',\n            pt: 'Configura\u00E7\u00F5es',\n            nl: 'Instellingen',\n            fr: 'Param\u00E8tres',\n            it: 'Impostazioni',\n            es: 'Configuraciones',\n            pl: 'Ustawienia',\n            'zh-cn': '\u8BBE\u5B9A\u503C',\n            uk: '\u041D\u0430\u043B\u0430\u0448\u0442\u0443\u0432\u0430\u043D\u043D\u044F'\n        });\n\n        this.adapter.log.debug(`handleSettingsDevice newSettings: ${JSON.stringify(newSettings)}`);\n\n        if (newSettings === undefined) {\n            return {refresh: false};\n        }\n\n        await this.adapter.updateDevice(newSettings);\n\n        if (!isMiner(currentSettings) || !isMiner(newSettings)) { // TODO: pool support (#deal with miner -> pool change: just disable category dropdown on settings)\n            this.adapter.log.error(`MinerAdapterDeviceManagement/handleSettingsDevice settings are not miners`);\n            return {refresh: false};\n        }\n\n        // name change requires full instance refresh, not just device - to display correct name in the devices header in the device list\n        if (currentSettings.name != newSettings.name) {\n            // PS: I don't know why this doesn't work\n            // return {refresh: 'instance'};\n            return {refresh: true};\n        }\n\n        return {refresh: 'device'};\n    }\n\n    async getDeviceDetails(id: string): Promise<DeviceDetails | null | { error: string }> {\n        this.adapter.log.info(`Get device details ${id}`);\n\n        // TODO: cleanup all this boilerplate\n\n        const obj = await this.adapter.getObjectAsync(id);\n\n        if (obj == null) {\n            const error = `getDeviceDetails device ${id} not found`;\n            this.log.error(error);\n            return {error};\n        }\n\n        const settings: IOBrokerDeviceSettings = decryptDeviceSettings(obj.native as IOBrokerDeviceSettings, (value) => this.adapter.decrypt(value));\n\n        if (!isMiner(settings)) { // TODO: pool support\n            const error = `getDeviceDetails category ${obj.native.category} not yet supported`\n            this.log.error(error);\n            return {error};\n        }\n\n        // create dummy miner to get CLI args\n        const dummyMiner = createMiner(settings.settings);\n\n        // TODO: more details\n        return {\n            id,\n            schema: {\n                type: 'panel',\n                items: {\n                    name: {\n                        type: 'staticText',\n                        label: `<b>Name:</b> ${obj.common.name}`,\n                        newLine: true,\n                        sm: 12,\n                        disabled: 'true',\n                    },\n                    minerCliParams: {\n                        type: 'text',\n                        label: 'Miner CLI parameters',\n                        sm: 12,\n                        disabled: 'true',\n                    }\n                },\n                style: {\n                    minWidth: 420,\n                },\n            },\n            data: {\n                minerCliParams: dummyMiner.getCliArgs().join(' ')\n            },\n        };\n    }\n\n    async close(): Promise<void> {\n        // do nothing\n    }\n}\n\nexport default MinerAdapterDeviceManagement;"],
  "mappings": "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",
  "names": []
}
