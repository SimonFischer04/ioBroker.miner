{
  "version": 3,
  "sources": ["../../../../src/lib/miner/miner/IceRiverOcMiner.ts"],
  "sourcesContent": ["import {PollingMiner} from './PollingMiner';\nimport {IceRiverOcMinerSettings} from '../model/MinerSettings';\nimport {MinerFeatureKey} from '../model/MinerFeature';\nimport {MinerStats} from '../model/MinerStats';\nimport {sendGenericHTTPRequest} from '../../utils/http-utils';\n\n// TODO: support more endpoints\nenum IceRiverOcEndpoint {\n    sleep = 'api/machine/sleep',\n    wake = 'api/machine/wake',\n    overview = 'api/overview'\n}\n\ninterface IceRiverOcResponse {\n    error: number;\n    message: string;\n    // TODO: add more fields\n}\n\nexport class IceRiverOcMiner extends PollingMiner<IceRiverOcMinerSettings> {\n    public override async start(): Promise<void> {\n        await this.sendHTTPRequest(IceRiverOcEndpoint.wake, 'GET');\n    }\n\n    public override async fetchStats(): Promise<MinerStats> {\n        const responseBody = await this.sendHTTPRequest(IceRiverOcEndpoint.overview, 'GET');\n\n        return {\n            raw: responseBody\n        }\n    }\n\n    public override async stop(): Promise<void> {\n        await this.sendHTTPRequest(IceRiverOcEndpoint.sleep, 'GET');\n    }\n\n    public override getSupportedFeatures(): MinerFeatureKey[] {\n        return [\n            MinerFeatureKey.running,\n            MinerFeatureKey.rawStats\n        ];\n    }\n\n    public override getLoggerName(): string {\n        return `${super.getLoggerName()}IceRiverOcMiner[${this.settings.host}:${this.settings.port}]`;\n    }\n\n    public override getCliArgs(): string[] {\n        return [];\n    }\n\n    private async sendHTTPRequest(endpoint: string, httpMethod: string, body?: object): Promise<IceRiverOcResponse> {\n        return sendGenericHTTPRequest<IceRiverOcResponse>('https', this.settings.host, this.settings.port, this.settings.password, this.logger, endpoint, httpMethod, body);\n    }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAA2B;AAE3B,0BAA8B;AAE9B,wBAAqC;AAGrC,IAAK,qBAAL,kBAAKA,wBAAL;AACI,EAAAA,oBAAA,WAAQ;AACR,EAAAA,oBAAA,UAAO;AACP,EAAAA,oBAAA,cAAW;AAHV,SAAAA;AAAA,GAAA;AAYE,MAAM,wBAAwB,iCAAsC;AAAA,EACvE,MAAsB,QAAuB;AACzC,UAAM,KAAK,gBAAgB,+BAAyB,KAAK;AAAA,EAC7D;AAAA,EAEA,MAAsB,aAAkC;AACpD,UAAM,eAAe,MAAM,KAAK,gBAAgB,+BAA6B,KAAK;AAElF,WAAO;AAAA,MACH,KAAK;AAAA,IACT;AAAA,EACJ;AAAA,EAEA,MAAsB,OAAsB;AACxC,UAAM,KAAK,gBAAgB,iCAA0B,KAAK;AAAA,EAC9D;AAAA,EAEgB,uBAA0C;AACtD,WAAO;AAAA,MACH,oCAAgB;AAAA,MAChB,oCAAgB;AAAA,IACpB;AAAA,EACJ;AAAA,EAEgB,gBAAwB;AACpC,WAAO,GAAG,MAAM,cAAc,CAAC,mBAAmB,KAAK,SAAS,IAAI,IAAI,KAAK,SAAS,IAAI;AAAA,EAC9F;AAAA,EAEgB,aAAuB;AACnC,WAAO,CAAC;AAAA,EACZ;AAAA,EAEA,MAAc,gBAAgB,UAAkB,YAAoB,MAA4C;AAC5G,eAAO,0CAA2C,SAAS,KAAK,SAAS,MAAM,KAAK,SAAS,MAAM,KAAK,SAAS,UAAU,KAAK,QAAQ,UAAU,YAAY,IAAI;AAAA,EACtK;AACJ;",
  "names": ["IceRiverOcEndpoint"]
}
