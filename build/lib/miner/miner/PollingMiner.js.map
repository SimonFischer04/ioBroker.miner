{
  "version": 3,
  "sources": ["../../../../src/lib/miner/miner/PollingMiner.ts"],
  "sourcesContent": ["import {Miner} from './Miner';\nimport {PollingMinerSettings} from '../model/MinerSettings';\nimport {asyncInterval, AsyncIntervalReturnType} from '../../utils/delay';\nimport {MinerStats} from '../model/MinerStats';\n\nexport abstract class PollingMiner<S extends PollingMinerSettings> extends Miner<S> {\n    private pollInterval: AsyncIntervalReturnType | undefined;\n\n    public abstract fetchStats(): Promise<MinerStats>;\n\n    public override async init(): Promise<void> {\n        this.logger.info(`initializing with interval ${this.settings.pollInterval}`);\n\n        if (!this.settings.pollInterval || this.settings.pollInterval < 100) {\n            this.logger.error(`pollInterval >= 100 required. got: ${this.settings.pollInterval}`);\n            return;\n        }\n\n        // start polling\n        this.pollInterval = asyncInterval(async () => {\n            this.logger.debug('next poll interval time reached. calling fetchData()');\n            try {\n                const stats: MinerStats = await this.fetchStats();\n                await this.onStats(stats);\n            } catch (e) {\n                this.logger.error(`fetchStats failed: ${e}`);\n            }\n        }, this.settings.pollInterval, true);\n    }\n\n    public override async close(): Promise<void> {\n        await super.close();\n        this.pollInterval?.clear();\n    }\n\n    public override getLoggerName(): string {\n        return `${super.getLoggerName()}PollingMiner[${this.settings.pollInterval}]`;\n    }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAoB;AAEpB,mBAAqD;AAG9C,MAAe,qBAAqD,mBAAS;AAAA,EACxE;AAAA,EAIR,MAAsB,OAAsB;AACxC,SAAK,OAAO,KAAK,8BAA8B,KAAK,SAAS,YAAY,EAAE;AAE3E,QAAI,CAAC,KAAK,SAAS,gBAAgB,KAAK,SAAS,eAAe,KAAK;AACjE,WAAK,OAAO,MAAM,sCAAsC,KAAK,SAAS,YAAY,EAAE;AACpF;AAAA,IACJ;AAGA,SAAK,mBAAe,4BAAc,YAAY;AAC1C,WAAK,OAAO,MAAM,sDAAsD;AACxE,UAAI;AACA,cAAM,QAAoB,MAAM,KAAK,WAAW;AAChD,cAAM,KAAK,QAAQ,KAAK;AAAA,MAC5B,SAAS,GAAG;AACR,aAAK,OAAO,MAAM,sBAAsB,CAAC,EAAE;AAAA,MAC/C;AAAA,IACJ,GAAG,KAAK,SAAS,cAAc,IAAI;AAAA,EACvC;AAAA,EAEA,MAAsB,QAAuB;AA9BjD;AA+BQ,UAAM,MAAM,MAAM;AAClB,eAAK,iBAAL,mBAAmB;AAAA,EACvB;AAAA,EAEgB,gBAAwB;AACpC,WAAO,GAAG,MAAM,cAAc,CAAC,gBAAgB,KAAK,SAAS,YAAY;AAAA,EAC7E;AACJ;",
  "names": []
}
