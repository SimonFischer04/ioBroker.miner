{
  "version": 3,
  "sources": ["../../../../src/lib/miner/miner/Miner.ts"],
  "sourcesContent": ["// TODO:  ?\nimport {MinerSettings} from '../model/MinerSettings';\nimport * as crypto from 'node:crypto';\n\nexport abstract class Miner<S extends MinerSettings> {\n    public abstract connect(): Promise<void>;\n\n    constructor(\n        public readonly settings: S\n    ) {\n        if(!settings.id) {\n            this.settings.id = crypto.randomUUID();\n        }\n    }\n\n    public abstract start(): Promise<void>;\n\n    /**\n     * Stop mining\n     */\n    public abstract stop(): Promise<void>;\n\n    /**\n     * Close / cleanup any open resources\n     */\n    public abstract close(): Promise<void>;\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,aAAwB;AAEjB,MAAe,MAA+B;AAAA,EAGjD,YACoB,UAClB;AADkB;AAEhB,QAAG,CAAC,SAAS,IAAI;AACb,WAAK,SAAS,KAAK,OAAO,WAAW;AAAA,IACzC;AAAA,EACJ;AAaJ;",
  "names": []
}
