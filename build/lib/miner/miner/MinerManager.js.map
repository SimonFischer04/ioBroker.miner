{
  "version": 3,
  "sources": ["../../../../src/lib/miner/miner/MinerManager.ts"],
  "sourcesContent": ["import {Miner} from './Miner';\nimport {MinerSettings} from '../model/MinerSettings';\nimport {createMiner} from './MinerFactory';\n\nexport class MinerManager {\n    private readonly miners: Miner<MinerSettings>[] = [];\n\n    public async init(settings: MinerSettings): Promise<Miner<MinerSettings>> {\n        const miner: Miner<MinerSettings> = createMiner(settings);\n        this.miners.push(miner);\n        await miner.init();\n        return miner;\n    }\n\n    public async close(): Promise<void> {\n        for (const miner of this.miners) {\n            await miner.close();\n        }\n    }\n\n    private getMinerById(id: string): Miner<MinerSettings> | undefined {\n        return this.miners.find(miner => miner.settings.id === id);\n    }\n\n    public async startMiner(id: string): Promise<void> {\n        const miner = this.getMinerById(id);\n        if (!miner) {\n            throw new Error(`miner with id ${id} not found`);\n        }\n\n        await miner.start();\n    }\n\n    public async stopMiner(id: string): Promise<void> {\n        const miner = this.getMinerById(id);\n        if (!miner) {\n            throw new Error(`miner with id ${id} not found`);\n        }\n\n        await miner.stop();\n    }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,0BAA0B;AAEnB,MAAM,aAAa;AAAA,EACL,SAAiC,CAAC;AAAA,EAEnD,MAAa,KAAK,UAAwD;AACtE,UAAM,YAA8B,iCAAY,QAAQ;AACxD,SAAK,OAAO,KAAK,KAAK;AACtB,UAAM,MAAM,KAAK;AACjB,WAAO;AAAA,EACX;AAAA,EAEA,MAAa,QAAuB;AAChC,eAAW,SAAS,KAAK,QAAQ;AAC7B,YAAM,MAAM,MAAM;AAAA,IACtB;AAAA,EACJ;AAAA,EAEQ,aAAa,IAA8C;AAC/D,WAAO,KAAK,OAAO,KAAK,WAAS,MAAM,SAAS,OAAO,EAAE;AAAA,EAC7D;AAAA,EAEA,MAAa,WAAW,IAA2B;AAC/C,UAAM,QAAQ,KAAK,aAAa,EAAE;AAClC,QAAI,CAAC,OAAO;AACR,YAAM,IAAI,MAAM,iBAAiB,EAAE,YAAY;AAAA,IACnD;AAEA,UAAM,MAAM,MAAM;AAAA,EACtB;AAAA,EAEA,MAAa,UAAU,IAA2B;AAC9C,UAAM,QAAQ,KAAK,aAAa,EAAE;AAClC,QAAI,CAAC,OAAO;AACR,YAAM,IAAI,MAAM,iBAAiB,EAAE,YAAY;AAAA,IACnD;AAEA,UAAM,MAAM,KAAK;AAAA,EACrB;AACJ;",
  "names": []
}
