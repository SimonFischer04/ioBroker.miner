{
  "version": 3,
  "sources": ["../../../../src/lib/miner/model/MinerFeature.ts"],
  "sourcesContent": ["export enum MinerFeatureKey {\n    running = 'running',\n    rawStats = 'rawStats',\n    version = 'version',\n    totalHashrate = 'totalHashrate'\n}\n\nexport enum MinerFeatureCategory {\n    control = 'control',\n    info = 'info'\n}\n\nexport interface MinerFeatureProperties {\n    category: MinerFeatureCategory,\n    id: string;\n    label: string;\n    description: string;\n    type: string;\n    unit?: string;\n    readable?: boolean;\n    writable?: boolean;\n\n    // whether this feature is considered advanced. could be used to f.e. hide it in the UI by default\n    // (f.e. sets the \"expert\" flag in ioBroker)\n    advanced?: boolean;\n}\n\nexport const minerFeatures: Record<MinerFeatureKey, MinerFeatureProperties> = {\n    /*\n       controls\n    */\n    [MinerFeatureKey.running]: {\n        category: MinerFeatureCategory.control,\n        id: 'MINER_RUNNING',\n        label: 'Running',\n        description: 'Whether the miner is running.',\n        type: 'boolean',\n        readable: true,\n        writable: true\n    },\n\n    /*\n        info\n     */\n    [MinerFeatureKey.rawStats]: {\n        category: MinerFeatureCategory.info,\n        id: 'RAW',\n        label: 'RAW Miner Stats',\n        description: 'Raw info returned by the miner.',\n        type: 'object',\n        readable: true,\n        writable: false,\n        advanced: true\n    },\n\n    [MinerFeatureKey.version]: {\n        category: MinerFeatureCategory.info,\n        id: 'VERSION',\n        label: 'Miner Version',\n        description: 'The version of the miner software.',\n        type: 'string',\n        readable: true,\n        writable: false\n    },\n\n    [MinerFeatureKey.totalHashrate]: {\n        category: MinerFeatureCategory.info,\n        id: 'TOTAL_HASHRATE',\n        label: 'Total Hashrate',\n        description: 'The total hashrate of the miner.',\n        type: 'number',\n        unit: 'kh/s',\n        readable: true,\n        writable: false\n    }\n} as const;\n\nexport function getMinerFeatureFullId(key: MinerFeatureKey): string{\n    return `${minerFeatures[key].category}.${minerFeatures[key].id}`;\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAO,IAAK,kBAAL,kBAAKA,qBAAL;AACH,EAAAA,iBAAA,aAAU;AACV,EAAAA,iBAAA,cAAW;AACX,EAAAA,iBAAA,aAAU;AACV,EAAAA,iBAAA,mBAAgB;AAJR,SAAAA;AAAA,GAAA;AAOL,IAAK,uBAAL,kBAAKC,0BAAL;AACH,EAAAA,sBAAA,aAAU;AACV,EAAAA,sBAAA,UAAO;AAFC,SAAAA;AAAA,GAAA;AAoBL,MAAM,gBAAiE;AAAA;AAAA;AAAA;AAAA,EAI1E,CAAC,uBAAuB,GAAG;AAAA,IACvB,UAAU;AAAA,IACV,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,UAAU;AAAA,EACd;AAAA;AAAA;AAAA;AAAA,EAKA,CAAC,yBAAwB,GAAG;AAAA,IACxB,UAAU;AAAA,IACV,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,EACd;AAAA,EAEA,CAAC,uBAAuB,GAAG;AAAA,IACvB,UAAU;AAAA,IACV,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,aAAa;AAAA,IACb,MAAM;AAAA,IACN,UAAU;AAAA,IACV,UAAU;AAAA,EACd;AAAA,EAEA,CAAC,mCAA6B,GAAG;AAAA,IAC7B,UAAU;AAAA,IACV,IAAI;AAAA,IACJ,OAAO;AAAA,IACP,aAAa;AAAA,IACb,MAAM;AAAA,IACN,MAAM;AAAA,IACN,UAAU;AAAA,IACV,UAAU;AAAA,EACd;AACJ;AAEO,SAAS,sBAAsB,KAA6B;AAC/D,SAAO,GAAG,cAAc,GAAG,EAAE,QAAQ,IAAI,cAAc,GAAG,EAAE,EAAE;AAClE;",
  "names": ["MinerFeatureKey", "MinerFeatureCategory"]
}
