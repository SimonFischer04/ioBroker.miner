{
  "version": 3,
  "sources": ["../../../../src/lib/miner/model/Logger.ts"],
  "sourcesContent": ["import {Level} from './Level';\n\ntype LoggerType = {\n    log: (level: Level, message: string) => void;\n}\n\nexport function consoleLogger(): LoggerType {\n    return {\n        log: (level: Level, message: string) => {\n            switch (level) {\n                case Level.DEBUG:\n                    console.debug(message);\n                    break;\n                case Level.INFO:\n                    console.info(message);\n                    break;\n                case Level.NOTICE:\n                    console.info(message);\n                    break;\n                case Level.WARN:\n                    console.warn(message);\n                    break;\n                case Level.ERROR:\n                    console.error(message);\n                    break;\n                case Level.FATAL:\n                    console.error(message);\n                    break;\n            }\n        }\n    }\n}\n\nexport class Logger {\n    static logger: LoggerType = consoleLogger();\n\n    static getLogger(name: string): Logger {\n        return new Logger(name);\n    }\n\n    static setLogger(logger: LoggerType): void {\n        Logger.logger = logger;\n    }\n\n    private constructor(private readonly name: string) {\n    }\n\n    public log(message: string): void {\n        this.logWithLevel(Level.INFO, message);\n    }\n\n    public debug(message: string): void {\n        this.logWithLevel(Level.DEBUG, message);\n    }\n\n    public info(message: string): void {\n        this.logWithLevel(Level.INFO, message);\n    }\n\n    public notice(message: string): void {\n        this.logWithLevel(Level.NOTICE, message);\n    }\n\n    public warn(message: string): void {\n        this.logWithLevel(Level.WARN, message);\n    }\n\n    public error(message: string): void {\n        this.logWithLevel(Level.ERROR, message);\n    }\n\n    public fatal(message: string): void {\n        this.logWithLevel(Level.FATAL, message);\n    }\n\n    private logWithLevel(level: Level, message: string): void {\n        Logger.logger.log(level, `[${this.name}] ${Level[level]}: ${message}`);\n    }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAoB;AAMb,SAAS,gBAA4B;AACxC,SAAO;AAAA,IACH,KAAK,CAAC,OAAc,YAAoB;AACpC,cAAQ,OAAO;AAAA,QACX,KAAK,mBAAM;AACP,kBAAQ,MAAM,OAAO;AACrB;AAAA,QACJ,KAAK,mBAAM;AACP,kBAAQ,KAAK,OAAO;AACpB;AAAA,QACJ,KAAK,mBAAM;AACP,kBAAQ,KAAK,OAAO;AACpB;AAAA,QACJ,KAAK,mBAAM;AACP,kBAAQ,KAAK,OAAO;AACpB;AAAA,QACJ,KAAK,mBAAM;AACP,kBAAQ,MAAM,OAAO;AACrB;AAAA,QACJ,KAAK,mBAAM;AACP,kBAAQ,MAAM,OAAO;AACrB;AAAA,MACR;AAAA,IACJ;AAAA,EACJ;AACJ;AAEO,MAAM,OAAO;AAAA,EAWR,YAA6B,MAAc;AAAd;AAAA,EACrC;AAAA,EAXA,OAAO,SAAqB,cAAc;AAAA,EAE1C,OAAO,UAAU,MAAsB;AACnC,WAAO,IAAI,OAAO,IAAI;AAAA,EAC1B;AAAA,EAEA,OAAO,UAAU,QAA0B;AACvC,WAAO,SAAS;AAAA,EACpB;AAAA,EAKO,IAAI,SAAuB;AAC9B,SAAK,aAAa,mBAAM,MAAM,OAAO;AAAA,EACzC;AAAA,EAEO,MAAM,SAAuB;AAChC,SAAK,aAAa,mBAAM,OAAO,OAAO;AAAA,EAC1C;AAAA,EAEO,KAAK,SAAuB;AAC/B,SAAK,aAAa,mBAAM,MAAM,OAAO;AAAA,EACzC;AAAA,EAEO,OAAO,SAAuB;AACjC,SAAK,aAAa,mBAAM,QAAQ,OAAO;AAAA,EAC3C;AAAA,EAEO,KAAK,SAAuB;AAC/B,SAAK,aAAa,mBAAM,MAAM,OAAO;AAAA,EACzC;AAAA,EAEO,MAAM,SAAuB;AAChC,SAAK,aAAa,mBAAM,OAAO,OAAO;AAAA,EAC1C;AAAA,EAEO,MAAM,SAAuB;AAChC,SAAK,aAAa,mBAAM,OAAO,OAAO;AAAA,EAC1C;AAAA,EAEQ,aAAa,OAAc,SAAuB;AACtD,WAAO,OAAO,IAAI,OAAO,IAAI,KAAK,IAAI,KAAK,mBAAM,KAAK,CAAC,KAAK,OAAO,EAAE;AAAA,EACzE;AACJ;",
  "names": []
}
