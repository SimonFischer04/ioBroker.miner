{
  "version": 3,
  "sources": ["../../../src/miner/miner/ClayMoreMiner.ts"],
  "sourcesContent": ["import {Socket} from 'node:net';\nimport {ClaymoreMinerSettings} from '../model/MinerSettings';\nimport {PollingMiner} from './PollingMiner';\n\nexport class ClayMoreMiner extends PollingMiner<ClaymoreMinerSettings> {\n    private client: Socket = new Socket();\n\n    public connect(): Promise<void> {\n        if (!this.client.pending) {\n            // TODO: change to (singleton) logger (file?)\n            console.warn('ClayMoreMiner/connect: called with already open socket')\n        }\n\n        this.client.connect(this.settings.port, this.settings.host, () => {\n            console.log('Connected to server');\n            // TODO: set connection state? # ned here, cause des kumt in lib. simply resolve promise only when connected / reject otherwise?\n        });\n\n        return Promise.resolve();\n    }\n\n    public start(): Promise<void> {\n        this.client.write(JSON.stringify({\n            id: 0,\n            jsonrpc: '2.0',\n            method: 'control_gpu',\n            params: ['-1', '0']\n            // params: [\"-1\", \"2\"]\n        }) + '\\n');\n\n        // promisify()\n        return Promise.resolve();\n    }\n\n    public fetchData(): Promise<void> {\n        throw new Error('Method not implemented.');\n    }\n\n    public stop(): Promise<void> {\n        throw new Error('Method not implemented.');\n    }\n\n    public close(): Promise<void> {\n        throw new Error('Method not implemented.');\n    }\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAqB;AAErB,0BAA2B;AAEpB,MAAM,sBAAsB,iCAAoC;AAAA,EAC3D,SAAiB,IAAI,uBAAO;AAAA,EAE7B,UAAyB;AAC5B,QAAI,CAAC,KAAK,OAAO,SAAS;AAEtB,cAAQ,KAAK,wDAAwD;AAAA,IACzE;AAEA,SAAK,OAAO,QAAQ,KAAK,SAAS,MAAM,KAAK,SAAS,MAAM,MAAM;AAC9D,cAAQ,IAAI,qBAAqB;AAAA,IAErC,CAAC;AAED,WAAO,QAAQ,QAAQ;AAAA,EAC3B;AAAA,EAEO,QAAuB;AAC1B,SAAK,OAAO,MAAM,KAAK,UAAU;AAAA,MAC7B,IAAI;AAAA,MACJ,SAAS;AAAA,MACT,QAAQ;AAAA,MACR,QAAQ,CAAC,MAAM,GAAG;AAAA;AAAA,IAEtB,CAAC,IAAI,IAAI;AAGT,WAAO,QAAQ,QAAQ;AAAA,EAC3B;AAAA,EAEO,YAA2B;AAC9B,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC7C;AAAA,EAEO,OAAsB;AACzB,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC7C;AAAA,EAEO,QAAuB;AAC1B,UAAM,IAAI,MAAM,yBAAyB;AAAA,EAC7C;AACJ;",
  "names": []
}
